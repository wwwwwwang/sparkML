#main class
#class=com.datageek.mllib.k_means.Kmeans_train
#class=com.datageek.mlib.k_means.Kmeans_kvalue
#class=com.datageek.mlib.k_means.Kmeans_prediction
#class=com.datageek.mllib.classification.linear_model.SVMClassifier
#class=com.datageek.mllib.classification.linear_model.MultinomialLogisticRegressionExample
#class=com.datageek.mllib.classification.linear_model.LinearRegression
#class=com.datageek.mllib.classification.decision_tree.Regressor
class=com.datageek.mllib.classification.decision_tree.Classifier
#class=com.datageek.mllib.classification.ensemble.RandomForestClassifier
#class=com.datageek.mllib.classification.ensemble.RandomForesstRegressor
#class=com.datageek.mllib.classification.ensemble.GradientBoostedClassifier
#class=com.datageek.mllib.classification.ensemble.GradientBoostedRegressor
#class=com.datageek.mllib.classification.naivebayes.NaiveBayesExample
#class=com.datageek.mllib.classification.isotonicregression.isotonicregresser
#class=com.datageek.mllib.collaborative_filtering.AlternatingLeastSquares

#spark path for getting lib/*.jar
sparkpath=/opt/cloudera/parcels/CDH/lib/spark
#sparkpath=/home/hadoop/spark-1.6.2-bin-hadoop2.6

#the jar to be run
runjar=machine_learning.jar

#master: standalone
samaster=spark://192.168.100.90:7077
executor-memory=4G
executor-cores=7

#master: yarn-cluster
yexecutor-memory=6G
yexecutor-cores=3
ynum-executors=12
#ydriver-memory=2G
#yspark.default.parallelism=75 
#yspark.memory.fraction=0.8
#yspark.memory.storageFraction=0.75

#master: local
lcmaster=local[5]
lcexecutor-memory=15G
